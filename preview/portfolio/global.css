@import url('https://fonts.googleapis.com/css2?family=Lobster&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Text&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Victor+Mono:ital,wght@1,500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Signika+Negative&display=swap');
@import url("./a/3rd/materialSymbolsRounded.css");
.symbol{
	font-variation-settings:
	'FILL' 0,
	'wght' 400,
	'GRAD' 0,
	'opsz' 24;
}

/*
	* HAY this is a little area for code / design guidelines

	I. 	capitalize first letter of css --var if controlled by JS
			ex: --HeroScrollPer
		Or is a descriptor included for another class
			ex: #hero h1 .Blue{} && #hero h1 .Red{} ||
				|| #menu.Open && #menu.Closed
	
	III. underscore for local variables
		ex: --_contHeight

	IV. css --vars count starting from 0
		(and go darker or lighter whichever feels more natural)

	V.	global.css is for every page, any other css needed for any other
		page is labeled with the same name as the html file of the page

	VI.	only use !important for testing purposes or
		if a browser bug requires it

	V.	1 letter --vars are set in the html for each element,
		or uses descriptors from guideline "I."
*/

:root{
	/* Controlled by JS */
	--ItalicFont: 'Victor Mono';

	/* Colors */
	--bg: #030100;
	--bgAccent0: #060606;
	--bgAccent1: #252525;
	--accent0: #ffd4ac;
	--accent1: #d8a473;
	--accentDark0: #453a2f;
	--text: var(--accent0);
	--rgb0: #c71b1b;
	--rgb1: #cd732a;
	--rgb2: #cfd941;
	--rgb3: #449a31;
	--rgb4: #106193;

	--mw: min(1600px, 90vw); /* percentage of the main width */

	background: var(--bg);
	color: var(--accent0);
	font-family: 'Red Hat Text', sans-serif;
	padding: 0;
	margin: 0;
	overflow-x: hidden;
}
body{
	padding: 0;
	margin: 0;
}
#mainCont{
	display: flex;
	justify-content: center;
	width: 100%;
}
main{
	width: var(--mw);
}
::-webkit-scrollbar{
	background: var(--bgAccent0);
	width: 10px;
	height: 10px;
}
::-webkit-scrollbar-thumb{
	background: var(--bgAccent1);
}
::-webkit-scrollbar-corner{
	background: var(--bgAccent0);
}

/** Loading Lines */
@keyframes loadingLinesFinishedFall {
	from {top: 0%; height: 100%;}
	to {top: 100%; height: 00%;}
}
@keyframes loadingLinesFinishedBrightness {
	from {filter: brightness(0.2);}
	to {filter: brightness(1);}
}
#loadingLinesCont{
	top: 0;
	left: 0;
	display: flex;
	flex-direction: column;
	position: fixed;
	height: 100%;
	width: 100%;
	pointer-events: none;
}
#loadingLinesCont .line{
	position: relative;
	background: var(--c);
	box-shadow: 0 1px var(--c);
	width: 100%;
	height: 100%;
}
#loadingLinesCont:not([data-start]) .line{
	animation: loadingLinesFinishedFall 1s cubic-bezier(1,.31,.91,.98) forwards;
	animation-delay: 5s;
	filter: brightness(0.2);
}
#loadingLinesCont[data-start] .line{
	filter: brightness(0.2);
	animation: loadingLinesFinishedFall 1s cubic-bezier(1,.31,.91,.98) forwards,
	loadingLinesFinishedBrightness 0.5s ease-in forwards;
	animation-delay: 0s;
}

/** Footer */
/*! todo: redo to use --mw*/
footer{
	display: flex;
	justify-content: space-evenly;
	align-items: center;
	flex-direction: row;
	height: auto;
	padding: 6px;
	font-size: 16px;
	border: solid var(--bgAccent0) 3px;
	border-bottom: none;
	border-radius: 14px 14px 0 0;
}
/* unslant button/cont (can be used throughout page) */
.unslantCont{
	display: flex;
	justify-content: center;
	align-items: center;
	height: calc(0.03 * var(--mw));
	background: var(--bgAccent0);
	border-radius: calc(0.01 * var(--mw));
	font-size: calc(0.01 * var(--mw));
	transition: filter 0.4s ease;
}
.unslantCont span{
	text-align: center;
	padding: calc(0.01 * var(--mw));
	padding-top: 0;
	padding-bottom: 0;
	color: var(--bgAccent1);
}
.unslantCont input{
	background: var(--bgAccent1);
	border: none;
	border-radius: calc(0.002 * var(--mw));
	padding: calc(0.002 * var(--mw));
	font-size: inherit;
	cursor: pointer;
}
.unslantCont:hover, .unslantCont:has(input:focus){
	filter: brightness(3);
}
/* links (can be used throughout page) */
.socialButton{
	width: var(--w, ); /*! todo*/
}
.socialButton.Youtube{

}

/** Lines */
#linesCont{
	--_speed: 1.8s;
	--_lines: 5;
	--_width: 30vw;
	--_contHeight: calc(70svh - (30svh * var(--HeroScrollPer)));
	--_lineHeightTimingFunct: cubic-bezier(.55,1.4,.69,.17);
	width: var(--_width);
	height: var(--_contHeight);
	position: fixed;
	top: 0;
	right: 0;
	pointer-events: none;
}
#linesCont *{
	pointer-events: all;
}
@keyframes linesMove {
	0%	 {bottom: 100%;}
	100% {bottom: 0%;}
}
@keyframes linesHeight {
	0%	 {width: var(--_width);}
	100% {width: 0;}
}
#linesCont .line{
	--_height: calc(100% / (var(--_lines)));
	background: var(--c);
	height: var(--_height);
	position: absolute;
	animation: linesMove var(--_speed) linear infinite, linesHeight var(--_speed) var(--_lineHeightTimingFunct) infinite;
	animation-delay: calc(var(--n) * var(--_speed) / var(--_lines));
	right: 0;
	transition: width ease 1s;
}
#linesCont .line[data-anim="hover"]{
	--_lineHeightTimingFunct: ease-in;
}
#linesCont .line[data-anim="closed"]{
	/* --_lineHeightTimingFunct: ease-in; */
	width: 0;
	animation: none;
}
#linesCont .hoverCont{
	position: absolute;
	right: 0;
	top: 0;
	/* background: rgba(34, 75, 186, 0.5); */
	width: 90%;
	height: 90%;
	border-bottom-left-radius: 100%;
}

/** Lines Menu */
#linesMenuCont{
	--_menuOptions: 5;
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	width: auto;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: left;
	pointer-events: all;
}
#linesMenuCont .line{
	--_width: 35vw;
	--_miniLines: 4;
	--_totalMiniLines: calc(var(--_menuOptions) * var(--_miniLines));
	position: relative;
	background: var(--bgAccent0);
	height: 100%;
	width: var(--_width);
	transition:	width 1s cubic-bezier(.07,.5,0,.95),
				box-shadow 0.2s cubic-bezier(.07,.5,0,.95);
	box-shadow: inset 0 0 0 0 var(--c);
}
#linesMenuCont .line:hover{
	box-shadow: inset 0 -4px 0 0 var(--c);
	transition:	width 1s cubic-bezier(.07,.5,0,.95),
				box-shadow 1s cubic-bezier(.07,.5,0,.95);
}
@keyframes miniMenuLinesWidthOpen {
	0%  { width: 0;				right: 0; }
	100%{ width: var(--_miniWidth);	right: calc(var(--_miniWidth) * -1); }
}
@keyframes miniMenuLinesWidth {
	0%  { width: calc(var(--_miniWidth));								right: calc(var(--_miniWidth) * -1); }
	50% { width: calc(var(--_miniWidth) + var(--_miniWidthAnimChange));	right: calc((var(--_miniWidth) + var(--_miniWidthAnimChange)) * -1); }
	100%{ width: calc(var(--_miniWidth));								right: calc(var(--_miniWidth) * -1); }
}
#linesMenuCont .line .miniLine{
	--_miniWidthBase: calc(3vh + ((2vh / var(--_totalMiniLines)) * var(--tn)));
	--_miniWidthAnimChange: 4vh;
	--_miniWidth: var(--_miniWidthBase);
	--_speed: 1s;
	position: absolute;
	right: calc(var(--_miniWidth) * -1);
	top: calc((100% / var(--_miniLines)) * var(--ln));
	width: var(--_miniWidth);
	height: calc(100% / var(--_miniLines));
	background: var(--c);
	transition: background ease 0.3s;
	box-shadow:	2px 0 var(--c),
				0px 2px var(--c);
	border-radius: 0 3px 3px 0;
}
#linesMenuCont:has(.line:hover) .line:not(:hover) .miniLine{
	background: var(--bgAccent1);
	box-shadow:	3px 0 var(--c),
				0px 2px var(--bgAccent1);
}
#linesMenuCont .line:hover .miniLine{
	transition: background ease 0s;
}
#linesMenuCont .line a{
	color: var(--text);
	padding-top: 2.5vh;
	font-family: 'Lobster', sans-serif;	
	font-size: 10svh;
	text-decoration: none;
	width: 100%;
	height: calc(100% - 2.5vh);
	display: block;
	text-align: right;
}
#linesMenuCont .line a::after{
	content: '__';
	color: transparent;
}
#linesMenuContCont.Closed, #linesMenuContCont.Closed *{
	pointer-events: none;
}
#linesMenuContCont.Closed #linesMenuCont .line{
	left: calc((var(--_width) * -1) - 6vh);
	transition: left 1s cubic-bezier(1,0,.76,.75);
}
#linesMenuContCont.Open #linesMenuCont .line{
	left: 0;
	transition: left 1s cubic-bezier(.06,.5,0,1.09);
}
#linesMenuContCont.Open #linesMenuCont .line .miniLine{
	--_firstAnimDuration: 0.8s;
	animation:	miniMenuLinesWidthOpen var(--_firstAnimDuration) forwards cubic-bezier(1,0,.76,.75),
				miniMenuLinesWidth var(--_speed) infinite ease-in-out;
	animation-delay: 0s,
					calc((var(--tn) / var(--_totalMiniLines) * var(--_speed)) + var(--_firstAnimDuration));
}
#linesMenuClose{
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
#linesMenuContCont.Closed #linesMenuClose{
	display: none;
}

/** General */
.pageSpace{
	display: flex;
	width: 0;
	height: var(--h, 200px);
}
a:any-link{
	color: var(--text);
	text-decoration: underline wavy;
	/* text-decoration-thickness: calc(0.002 * var(--mw)); */
	text-decoration-thickness: 0.1em;
}
a:visited{
	text-decoration-color: var(--accent1);
}
h1 a, h2 a, h3 a{
	text-decoration: underline;
	text-decoration-color: var(--bgAccent1);
}
*::selection{
	background: var(--accent1);
	color: var(--bg);
}
*::-moz-selection{
	background: var(--accent1);
	color: var(--bg);
}
.circleButtonHighlight{
	cursor: pointer;
	transition: background 0.4s ease,
				outline 0.4s ease;
	border-radius: 5138008px;
}
.circleButtonHighlight:hover, .circleButtonHighlight:focus{
	background: var(--bgAccent1);
	outline: solid 4px var(--bgAccent1);
	transition: background 0.4s ease,
				outline 0.3s ease;
}
h1, h2, h3{
	font-size: calc(0.06 * var(--mw));
	font-family: 'Lobster', sans-serif;
	font-style: italic;
	font-weight: 100;
	margin: 0;
	margin-bottom: 20px;
	cursor: default;
}
h2, h3{
	font-size: calc(0.03 * var(--mw));
	margin-bottom: 10px;
}
h3{
	font-size: calc(0.02 * var(--mw));
}
p{
	font-size: calc(0.015 * var(--mw));
	font-family: var(--ItalicFont);
	font-style: italic;
}
